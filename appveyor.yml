version: 0.1.0.{build}
clone_folder: c:\projects\$(APPVEYOR_PROJECT_NAME)
environment:
  DiagnoseRG: $true
  RequiredModules: xPSDesiredStateConfiguration,xPendingReboot
  TestResultsUploadURI: https://ci.appveyor.com/api/testresults/nunit/$(APPVEYOR_JOB_ID)
  ApplicationID:
    secure: mHB9K9ItLkpdxUR7WgBnuBiBOl3qgJT1yizvFZDOgkRxvTV5KoZJ8QuAp+F+EbV0
  SubscriptionID:
    secure: fhB5mHXLFRRc1/iwqCA9ibCqwg7qKqkayknhebLsM+FdlrmL80HCRm1vJYafomei
  TenantID:
    secure: J/my7xsOE9jewR0DDhD+EU5jeo5Bp83/nmIK8a8QI0QLoZXStCOtk1vUjVsKylW2
  ApplicationPassword:
    secure: zV3r4bwG65rWRfF1L23RYLj7GXVxsMdZtasCsX0+pYA=
  BuildFolder: $(APPVEYOR_BUILD_FOLDER)
  ProjectName: $(APPVEYOR_PROJECT_NAME)
  ProjectID: $(APPVEYOR_POJECT_ID)
  BuildID: $(APPVEYOR_BUILD_ID)
matrix:
  fast_finish: true
install:
  - git clone https://github.com/PowerShell/DscConfiguration.Tests
  - ps: |
        $null = Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.208 -Scope CurrentUser -Force
        Install-Module -Name PowerShellGet -MinimumVersion 1.6.0 -Scope CurrentUser -Repository PSGallery -AllowClobber -Force
        Install-Module InvokeBuild,Pester,PSScriptAnalyzer -Scope CurrentUser -SkipPublisherCheck -Repository PSGallery -Force

        # Load required modules from gallery
        foreach ($module in $env:RequiredModules.split(',')) {
            Install-Module $module -Repository PSGallery -Scope CurrentUser -AllowClobber -Force
        }
build_script:
  - ps: |
        Import-Module -Global -Name PowerShellGet -MinimumVersion 1.6.0 -Force
        if (Test-Path -Path .\.build.ps1) {
          Invoke-Build -Summary
        }
        else {
          Invoke-Build -File .\DscConfiguration.Tests\.build.ps1 -Summary
        }